package org.usfirst.frc620.Warbots2015.commands;
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc620.Warbots2015.Robot;
import org.usfirst.frc620.Warbots2015.RobotMap;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.Joystick.RumbleType;

public class  movePicker extends Command {
	Joystick xbox;
	DigitalInput limitBottom, limitTop;
	JoystickButton button2,button3,button4,button5,button6;
	Joystick.RumbleType kLeftRumble;
	Joystick.RumbleType kRightRumble;
	
    public movePicker() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.picker);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    public movePicker(double speed, double time){
    	
    }

    protected void initialize() {
    	limitBottom = RobotMap.pickerlimitSwitchBottom;
    	limitTop = RobotMap.pickerlimitSwitchTop;
    	button5 = new JoystickButton(xbox,5);
    	button6 = new JoystickButton(xbox,6);
    }

    protected void execute() {
    	if(limitBottom.get()&&(xbox.getRawAxis(1))>0){
    		
    		Robot.picker.setSpeed(xbox.getRawAxis(1));
    		
    	} else if(limitTop.get()&&(xbox.getRawAxis(1)<0)){
    		
    		Robot.picker.setSpeed(xbox.getRawAxis(1));
    		
    	} else if((limitBottom.get()&&(xbox.getRawAxis(1))<0)||(limitTop.get()&&(xbox.getRawAxis(1)>0))){
    		
    		Robot.picker.setSpeed(0);
    		
    	} else if((limitBottom.get() == true)||(limitTop.get() == true)){
    		
    		Robot.picker.setSpeed(xbox.getRawAxis(1));
    		
    	} else {    		
    		Robot.picker.setSpeed(xbox.getRawAxis(1));
    	}
    	if(button5.get()) new lowerPicker(1.5414012738853503184713375796178);
    	if(button6.get()) new liftPicker(1.5414012738853503184713375796178);
    	if(limitBottom.get()){
    		xbox.setRumble(kLeftRumble,1);
    		xbox.setRumble(kRightRumble,1);
    	}else{
    		xbox.setRumble(kLeftRumble,0);
    		xbox.setRumble(kRightRumble,0);
    	}
    	if(limitTop.get()){
    		xbox.setRumble(kRightRumble,1);
    		xbox.setRumble(kLeftRumble,1);
    	}else{
    		xbox.setRumble(kLeftRumble,0);
    		xbox.setRumble(kRightRumble,0);
    	}
    		
    	
    	
    }

    protected boolean isFinished() {
        return false;
    }

    protected void end() {
    }

    protected void interrupted() {
    }
}
