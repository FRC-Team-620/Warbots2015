package org.usfirst.frc620.Warbots2015.commands;

import org.usfirst.frc620.Warbots2015.Robot;



import org.usfirst.frc620.Warbots2015.RobotMap;
import org.usfirst.frc620.Warbots2015.commands.turnLeft;

import com.kauailabs.navx_mxp.AHRS;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.buttons.JoystickButton;

/**
 *
 */
public class  DriveWithJoysticks extends Command {
	Joystick stick;
	private final AHRS imu = RobotMap.imu;
	double x, y, z, theta, throttle; //joystick
	//double start, now; //time
	Timer timer;
	public JoystickButton button2;
	JoystickButton button3, button4, button5, button6;
	public boolean fieldCentric;
	
	
    public DriveWithJoysticks() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    
    // Called just before this Command runs the first time
    protected void initialize() {
    	System.out.println("Drive with joysticks init");
    	stick = new Joystick(0);
    	imu.zeroYaw();
    	//timer.start();
    	//start = timer.getFPGATimestamp();
    	button3 = new JoystickButton(stick,2);
    	button3 = new JoystickButton(stick,3);
    	button4 = new JoystickButton(stick,4);
    	button5 = new JoystickButton(stick,5);
    	button6 = new JoystickButton(stick,6);
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	x=stick.getX();
    	y=stick.getY();
    	z=stick.getTwist();
    	throttle = 1-((stick.getThrottle()/2)+.5);

    	//now = timer.getFPGATimestamp();
    	//System.out.println("math: "+(now-start));
    	
    	theta = imu.getYaw();
    	Robot.driveWithJoysticks.fieldCentric = (boolean) Robot.fieldCentricChooser.getSelected();
    	
    	//dead zones
    	if(Math.abs(x)<0.2) x=0;
    	if(Math.abs(y)<0.2) y=0;
    	if(Math.abs(z)<0.4) z=0;

    	//turning buttons
    	if(button3.get()) new turnLeft(1);
    	if(button4.get()) new turnRight(1);
    	if(button5.get()) new turnAroundLeft(1);
    	if(button6.get()) new turnAroundRight(1);
    	
    	//field centric vs regular drive
    	if(fieldCentric)
    		Robot.driveTrain.mecanumDrive(-x*throttle,y*throttle, z*throttle, -theta); 
    	else
    		Robot.driveTrain.mecanumDrive(-x*throttle,y*throttle, z*throttle, 0); 
    	
    	SmartDashboard.putNumber("angle", theta);
    	SmartDashboard.putData("Gyro", RobotMap.imu);
    	
    }

    protected boolean isFinished() {
        return false;
    }

    protected void end() {
    }

    protected void interrupted() {
    }
}
