package org.usfirst.frc620.Warbots2015.commands;

import edu.wpi.first.wpilibj.command.Command;

import com.kauailabs.navx_mxp.AHRS;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc620.Warbots2015.Robot;
import org.usfirst.frc620.Warbots2015.RobotMap;

/**
 *
 */
public class  Drive extends Command {
	double time;
	AHRS imu;
	double drivex = 0;
	double drivey = 0;
	double drivez = 0;
	double turn = 0;
	double theta = 90;
	boolean distance;
	boolean isGyro;
	double dis;
	
    public Drive() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    public Drive(double t, double x, double y, double z) {
    	time = t;
    	drivex = x;
    	drivey = y;
    	drivez = z;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    public Drive(double t,double angle) {
    	time = t;
    	
    	drivez = angle;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    public Drive(double displacement,boolean whatever){
    	distance = whatever;
    	imu = RobotMap.imu;
    	dis = displacement;
    	drivey = .5;
    	
    }
    public Drive(double angle, boolean gyro,boolean whatever){
    	isGyro = gyro;
    	theta = angle;
    	if(angle>0){
    		drivez = .75;
    	}else{
    		drivez = -.75;
    	}
    }

    protected void initialize() {
    	if(distance){
    		imu.resetDisplacement();
    	}else if(isGyro){
    		imu.zeroYaw();
    	}else{
    	setTimeout(time);
    	}
    }

    protected void execute() {
    	Robot.driveTrain.mecanumDrive(drivex, drivey, drivez, turn);
    	SmartDashboard.putNumber("angle", theta);
    	SmartDashboard.putData("Gyro", RobotMap.imu);
    }

    protected boolean isFinished() {
        if(distance){
        	return imu.getDisplacementY() > dis;
        }else if(isGyro){
        	return (imu.getYaw() <= theta+5 && imu.getYaw() >= theta-5);
        }else{
    	return isTimedOut();
        }
    }

    protected void end() {
    	Robot.driveTrain.mecanumDrive(0, 0, 0, 0);
    }

    protected void interrupted() {
    	end();
    }
}
